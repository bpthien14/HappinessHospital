# Generated by Django 4.2.23 on 2025-08-23 04:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "patient_code",
                    models.CharField(
                        help_text="Mã bệnh nhân tự động", max_length=20, unique=True
                    ),
                ),
                (
                    "full_name",
                    models.CharField(help_text="Họ và tên đầy đủ", max_length=255),
                ),
                ("date_of_birth", models.DateField(help_text="Ngày sinh")),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Nam"), ("F", "Nữ"), ("O", "Khác")],
                        help_text="Giới tính",
                        max_length=1,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Số điện thoại liên lạc",
                        max_length=15,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Số điện thoại phải theo định dạng Việt Nam (VD: 0987654321 hoặc +84987654321)",
                                regex="^(\\+84|0)[3|5|7|8|9](\\d{8})$",
                            )
                        ],
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Email (không bắt buộc)",
                        max_length=254,
                        null=True,
                    ),
                ),
                ("address", models.TextField(help_text="Địa chỉ thường trú")),
                ("ward", models.CharField(help_text="Phường/Xã", max_length=100)),
                ("district", models.CharField(help_text="Quận/Huyện", max_length=100)),
                (
                    "province",
                    models.CharField(help_text="Tỉnh/Thành phố", max_length=100),
                ),
                (
                    "citizen_id",
                    models.CharField(
                        help_text="Số CCCD/CMND",
                        max_length=12,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="CCCD phải có 9 hoặc 12 số",
                                regex="^\\d{9}$|^\\d{12}$",
                            )
                        ],
                    ),
                ),
                (
                    "blood_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                        ],
                        help_text="Nhóm máu",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "allergies",
                    models.TextField(blank=True, help_text="Dị ứng (nếu có)"),
                ),
                (
                    "chronic_diseases",
                    models.TextField(blank=True, help_text="Bệnh mãn tính (nếu có)"),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(
                        help_text="Tên người liên hệ khẩn cấp", max_length=255
                    ),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(
                        help_text="SĐT người liên hệ khẩn cấp",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Số điện thoại phải theo định dạng Việt Nam (VD: 0987654321 hoặc +84987654321)",
                                regex="^(\\+84|0)[3|5|7|8|9](\\d{8})$",
                            )
                        ],
                    ),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(
                        help_text="Mối quan hệ với bệnh nhân", max_length=100
                    ),
                ),
                (
                    "has_insurance",
                    models.BooleanField(default=False, help_text="Có BHYT"),
                ),
                (
                    "insurance_number",
                    models.CharField(
                        blank=True, help_text="Số thẻ BHYT", max_length=15, null=True
                    ),
                ),
                (
                    "insurance_valid_from",
                    models.DateField(
                        blank=True, help_text="BHYT hiệu lực từ", null=True
                    ),
                ),
                (
                    "insurance_valid_to",
                    models.DateField(
                        blank=True, help_text="BHYT hiệu lực đến", null=True
                    ),
                ),
                (
                    "insurance_hospital_code",
                    models.CharField(
                        blank=True,
                        help_text="Mã nơi đăng ký KCB ban đầu",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Trạng thái hoạt động"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="Người tạo hồ sơ",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_patients",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        help_text="Người cập nhật cuối",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_patients",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Bệnh nhân",
                "verbose_name_plural": "Bệnh nhân",
                "db_table": "patients",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PatientDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("ID_CARD", "CCCD/CMND"),
                            ("INSURANCE_CARD", "Thẻ BHYT"),
                            ("MEDICAL_REPORT", "Báo cáo y tế"),
                            ("LAB_RESULT", "Kết quả xét nghiệm"),
                            ("PRESCRIPTION", "Đơn thuốc"),
                            ("DISCHARGE_SUMMARY", "Tóm tắt xuất viện"),
                            ("OTHER", "Khác"),
                        ],
                        help_text="Loại tài liệu",
                        max_length=20,
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Tiêu đề tài liệu", max_length=255),
                ),
                ("description", models.TextField(blank=True, help_text="Mô tả")),
                (
                    "file",
                    models.FileField(
                        help_text="File tài liệu", upload_to="patient_documents/%Y/%m/"
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(help_text="Kích thước file (bytes)"),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "patient",
                    models.ForeignKey(
                        help_text="Bệnh nhân",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="patients.patient",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        help_text="Người tải lên",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tài liệu bệnh nhân",
                "verbose_name_plural": "Tài liệu bệnh nhân",
                "db_table": "patient_documents",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="MedicalRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("medical_record_number", models.CharField(max_length=20, unique=True)),
                ("visit_date", models.DateTimeField(help_text="Ngày giờ khám")),
                (
                    "visit_type",
                    models.CharField(
                        choices=[
                            ("OUTPATIENT", "Ngoại trú"),
                            ("INPATIENT", "Nội trú"),
                            ("EMERGENCY", "Cấp cứu"),
                            ("CHECKUP", "Khám sức khỏe"),
                        ],
                        help_text="Loại khám",
                        max_length=20,
                    ),
                ),
                (
                    "department",
                    models.CharField(help_text="Khoa/Phòng khám", max_length=100),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("WAITING", "Chờ khám"),
                            ("IN_PROGRESS", "Đang khám"),
                            ("COMPLETED", "Hoàn thành"),
                            ("CANCELLED", "Hủy"),
                        ],
                        default="WAITING",
                        max_length=20,
                    ),
                ),
                (
                    "chief_complaint",
                    models.TextField(help_text="Lý do khám (triệu chứng chính)"),
                ),
                (
                    "history_of_present_illness",
                    models.TextField(blank=True, help_text="Bệnh sử"),
                ),
                (
                    "physical_examination",
                    models.TextField(blank=True, help_text="Khám lâm sàng"),
                ),
                (
                    "temperature",
                    models.FloatField(blank=True, help_text="Nhiệt độ (°C)", null=True),
                ),
                (
                    "blood_pressure_systolic",
                    models.IntegerField(
                        blank=True, help_text="Huyết áp tâm thu", null=True
                    ),
                ),
                (
                    "blood_pressure_diastolic",
                    models.IntegerField(
                        blank=True, help_text="Huyết áp tâm trương", null=True
                    ),
                ),
                (
                    "heart_rate",
                    models.IntegerField(
                        blank=True, help_text="Nhịp tim (bpm)", null=True
                    ),
                ),
                (
                    "respiratory_rate",
                    models.IntegerField(blank=True, help_text="Nhịp thở", null=True),
                ),
                (
                    "weight",
                    models.FloatField(blank=True, help_text="Cân nặng (kg)", null=True),
                ),
                (
                    "height",
                    models.FloatField(
                        blank=True, help_text="Chiều cao (cm)", null=True
                    ),
                ),
                (
                    "preliminary_diagnosis",
                    models.TextField(blank=True, help_text="Chẩn đoán sơ bộ"),
                ),
                (
                    "final_diagnosis",
                    models.TextField(blank=True, help_text="Chẩn đoán cuối cùng"),
                ),
                (
                    "treatment_plan",
                    models.TextField(blank=True, help_text="Kế hoạch điều trị"),
                ),
                ("notes", models.TextField(blank=True, help_text="Ghi chú của bác sĩ")),
                (
                    "next_appointment",
                    models.DateTimeField(
                        blank=True, help_text="Hẹn tái khám", null=True
                    ),
                ),
                (
                    "follow_up_instructions",
                    models.TextField(blank=True, help_text="Hướng dẫn tái khám"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_medical_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        help_text="Bác sĩ khám",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="medical_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        help_text="Bệnh nhân",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_records",
                        to="patients.patient",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_medical_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Hồ sơ bệnh án",
                "verbose_name_plural": "Hồ sơ bệnh án",
                "db_table": "medical_records",
                "ordering": ["-visit_date"],
            },
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["patient_code"], name="patients_patient_74efca_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["phone_number"], name="patients_phone_n_eba9eb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["citizen_id"], name="patients_citizen_2fbf2a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["full_name"], name="patients_full_na_4556a3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["created_at"], name="patients_created_b2d3e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicalrecord",
            index=models.Index(
                fields=["patient", "visit_date"], name="medical_rec_patient_ec477f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicalrecord",
            index=models.Index(
                fields=["doctor", "visit_date"], name="medical_rec_doctor__a83a4b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicalrecord",
            index=models.Index(
                fields=["visit_date"], name="medical_rec_visit_d_9bd080_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicalrecord",
            index=models.Index(fields=["status"], name="medical_rec_status_a6f859_idx"),
        ),
    ]
