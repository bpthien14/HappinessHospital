# Generated by Django 4.2.23 on 2025-08-23 03:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("PATIENT", "Bệnh nhân"),
                            ("DOCTOR", "Bác sĩ"),
                            ("NURSE", "Y tá"),
                            ("RECEPTION", "Lễ tân"),
                            ("PHARMACIST", "Dược sĩ"),
                            ("TECHNICIAN", "Kỹ thuật viên"),
                            ("ADMIN", "Quản trị viên"),
                            ("CASHIER", "Thu ngân"),
                        ],
                        default="PATIENT",
                        max_length=20,
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("department", models.CharField(blank=True, max_length=100)),
                ("phone_number", models.CharField(blank=True, max_length=15)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("address", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login_ip", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "resource",
                    models.CharField(
                        choices=[
                            ("PATIENT", "Patient Management"),
                            ("APPOINTMENT", "Appointment Management"),
                            ("PRESCRIPTION", "Prescription Management"),
                            ("PAYMENT", "Payment Management"),
                            ("TESTING", "Testing Management"),
                            ("REPORT", "Report Management"),
                            ("SYSTEM", "System Management"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Create"),
                            ("READ", "Read"),
                            ("UPDATE", "Update"),
                            ("DELETE", "Delete"),
                            ("APPROVE", "Approve"),
                            ("CANCEL", "Cancel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
            ],
            options={
                "db_table": "permissions",
                "unique_together": {("resource", "action")},
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                (
                    "role_type",
                    models.CharField(
                        choices=[
                            ("SYSTEM", "System Role"),
                            ("DEPARTMENT", "Department Role"),
                            ("CUSTOM", "Custom Role"),
                        ],
                        default="CUSTOM",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "roles",
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to="users.role",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_roles",
                "unique_together": {("user", "role")},
            },
        ),
        migrations.CreateModel(
            name="RolePermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("granted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.permission",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permissions",
                        to="users.role",
                    ),
                ),
            ],
            options={
                "db_table": "role_permissions",
                "unique_together": {("role", "permission")},
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id_backup", models.CharField(max_length=100)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Create"),
                            ("READ", "Read"),
                            ("UPDATE", "Update"),
                            ("DELETE", "Delete"),
                            ("LOGIN", "Login"),
                            ("LOGOUT", "Logout"),
                            ("PERMISSION_DENIED", "Permission Denied"),
                        ],
                        max_length=20,
                    ),
                ),
                ("resource_type", models.CharField(max_length=100)),
                (
                    "resource_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("request_data", models.JSONField(blank=True, null=True)),
                ("response_status", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "audit_logs",
                "indexes": [
                    models.Index(
                        fields=["user_id_backup", "timestamp"],
                        name="audit_logs_user_id_a17269_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="audit_logs_action_474804_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "timestamp"],
                        name="audit_logs_resourc_4f6f11_idx",
                    ),
                ],
            },
        ),
    ]
